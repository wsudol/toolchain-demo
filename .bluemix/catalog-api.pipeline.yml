---
stages:
- name: BUILD
  inputs:
  - type: git
    branch: master
    service: ${CATALOG_API_REPO}
  triggers:
  - type: commit
  jobs:
  - name: Build
    type: builder
  - name: Unit Tests
    type: tester
    extension_id: ibm.devops.services.pipeline.dra_mocha_test
    MINIMUM_SUCCESS_RATE: '100'
    TEST_LOG_FILE: tests/server/mochatest.json
    MINIMUM_COVERAGE_RATE: '50'
    ADVISORY_MODE: 'false'
    COVERAGE_TOOL_SELECT: istanbul
    COVERAGE_REGRESSION_THRESHOLD: '2'
    CHECK_TEST_REGRESSION: 'true'
    COVERAGE_LOG_FILE: tests/server/coverage/reports/coverage-summary.json
    COMMAND: |
      #!/bin/bash
      npm install
      grunt dev-test-cov --no-color -f
    CHECK_COVERAGE_REGRESSION: 'true'
    TEST_TOOL_SELECT: mocha
- name: DEV
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: CF_APP_NAME
    value: undefined
    type: text
  - name: APP_URL
    value: undefined
    type: text
  jobs:
  - name: Pre Deploy Check
    type: tester
    extension_id: ibm.devops.services.pipeline.dra_predeploygate_extn
    ENABLE_COMPARE_APPS: 'false'
    DRA_MODE: 'false'
    APP_DESTINATION_MANIFEST: manifest.yml
    APP_DESTINATION: Dev
    APP_NOTDESTINATION: Test
    COMMAND: '#!/bin/bash'
  - name: Deploy to Dev
    type: deployer
    target:
      region_id: ${DEV_REGION_ID}
      organization: ${DEV_ORG_NAME}
      space: ${DEV_SPACE_NAME}
      application: ${CF_APP_NAME}
    script: |
      #!/bin/bash
      cf create-service cloudantNoSQLDB Shared myMicroservicesCloudant
      # Push app
      export CF_APP_NAME="dev-$CF_APP"
      cf push "${CF_APP_NAME}"
      export APP_URL=http://$(cf app $CF_APP_NAME | grep urls: | awk '{print $2}')
      # View logs
      #cf logs "${CF_APP_NAME}" --recent
  - name: Functional Tests
    type: tester
    extension_id: ibm.devops.services.pipeline.dra_mocha_fvt
    MINIMUM_SUCCESS_RATE: '100'
    TEST_LOG_FILE: tests/fvt/mochafvttest.json
    ADVISORY_MODE: 'false'
    CHECK_TEST_REGRESSION: 'true'
    COMMAND: |-
      #!/bin/bash
      export CATALOG_API_TEST_SERVER=$APP_URL
      npm install
      grunt dev-fvt --no-color -f
    TEST_TOOL_SELECT: mocha
- name: TEST
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: CF_APP_NAME
    value: undefined
    type: text
  - name: APP_URL
    value: undefined
    type: text
  jobs:
  - name: Pre Deploy Check
    type: tester
    extension_id: ibm.devops.services.pipeline.dra_predeploygate_extn
    services:
      - ${SAUCE_LABS}
    ENABLE_COMPARE_APPS: 'true'
    DRA_MODE: 'false'
    APP_DESTINATION_MANIFEST: manifest.yml
    APP_DESTINATION: Test
    APP_NOTDESTINATION: Dev
    COMMAND: '#!/bin/bash'
  - name: Deploy to Test
    type: deployer
    target:
      region_id: ${QA_REGION_ID}
      organization: ${QA_ORG_NAME}
      space: ${QA_SPACE_NAME}
      application: ${CF_APP_NAME}
    script: |
      #!/bin/bash
      cf create-service cloudantNoSQLDB Shared myMicroservicesCloudant
      # Push app
      export CF_APP_NAME="test-$CF_APP"
      cf push "${CF_APP_NAME}"
      # View logs
      #cf logs "${CF_APP_NAME}" --recent
  - name: Sauce Labs Tests
    type: tester
    extension_id: ibm.devops.services.pipeline.saucelabs
    target:
      region_id: ${QA_REGION_ID}
      organization: ${QA_ORG_NAME}
      space: ${QA_SPACE_NAME}
    DL_ASSETS: 'false'
    SELECT_CMD: custom
    COMMAND: |-
      #!/bin/bash
      npm install
      echo $APP_URL | grep "stage1"
      if [ $? -eq 0 ]; then
          grunt test_fake
      else
          grunt test_real
      fi
    enable_tests: true
    test_file_pattern: '*.xml'
- name: PROD
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: CF_APP_NAME
    value: undefined
    type: text
  - name: APP_URL
    value: undefined
    type: text
  - name: AD_ENDPOINT
    value: http://cap-sg-prd-1.integration.ibmcloud.com:15749
    type: text
  - name: GROUP_SIZE
    value: '2'
    type: text
  - name: TARGET_PLATFORM
    value: CloudFoundry
    type: text
  - name: TEST_RESULT_FOR_AD
    value: ''
    type: text
  jobs:
  - name: Pre Deploy Check
    type: tester
    extension_id: ibm.devops.services.pipeline.dra_predeploygate_extn
    ENABLE_COMPARE_APPS: 'true'
    DRA_MODE: 'false'
    APP_DESTINATION_MANIFEST: manifest.yml
    APP_DESTINATION: Prod
    APP_NOTDESTINATION: Test
    COMMAND: '#!/bin/bash'
  - name: Passive Deploy
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME}
    script: |-
      #!/bin/bash
      cf create-service cloudantNoSQLDB Shared myMicroservicesCloudant
      export CF_APP_NAME="${CF_APP}_${BUILD_NUMBER}"
      cf push "${CF_APP_NAME}" --no-route -i 1
  - name: Active Rollout
    type: deployer
    extension_id: ibm.devops.services.pipeline.devops.ad_start
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME}
    RAMPDOWN_DURATION: 1m
    RAMPUP_DURATION: 2m
    COMMAND: |-
      #!/bin/bash
      source ${EXT_DIR}/git_util.sh
      git_retry clone https://github.com/Osthanes/update_service.git activedeploy
      activedeploy/activedeploy_step_1.sh
  - name: Active Cleanup
    type: deployer
    extension_id: ibm.devops.services.pipeline.devops.ad_finish
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME}
    COMMAND: |-
      #!/bin/bash
      source ${EXT_DIR}/git_util.sh
      git_retry clone https://github.com/Osthanes/update_service.git activedeploy
      activedeploy/activedeploy_step_2.sh
